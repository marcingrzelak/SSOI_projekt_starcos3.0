<Application x:Class="Eportmonetka.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Eportmonetka"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="SelectReaderButtonStyle" TargetType="Button">
            <Setter Property="Content" Value="Wybierz" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#BABABA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#BABABA" />
            <Setter Property="Width" Value="145" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFBABABA" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF0086AF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransactionSummaryButtonStyle" TargetType="Button">
            <Setter Property="Content" Value="Wybierz" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="0,0,0,23" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#BABABA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#BABABA" />
            <Setter Property="Width" Value="145" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFBABABA" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF0086AF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SelectedReaderLabelStyle" TargetType="Label">
            <Setter Property="Content" Value="Wybrany czytnik:" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,50.333,0,0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="#BABABA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="100" />
        </Style>

        <Style x:Key="SelectedReaderTextBoxStyle" TargetType="TextBox">
            <Setter Property="Text" Value="Brak" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,45.333,10,0" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Foreground" Value="#FFD0284C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="110" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="ReadersListStyle" TargetType="ListBox">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="10,0,10,0" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="Background" Value="#181818" />
            <Setter Property="BorderBrush" Value="#BABABA" />
            <Setter Property="Foreground" Value="#BABABA" />
        </Style>

        <Style x:Key="SelectReaderLabelStyle" TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="10,10,0,0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Foreground" Value="#BABABA" />
        </Style>

        <Style x:Key="InitRechargeButtonStyle" TargetType="Button">
            <Setter Property="Grid.Row" Value="3" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="45" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Foreground" Value="#BABABA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderBrush" Value="#BABABA" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFBABABA" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF0086AF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InitRechargeTransactionStatusTextBoxStyle" TargetType="TextBox">
            <Setter Property="Grid.Row" Value="3" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="0,0,0,3" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="250" />
            <Setter Property="Foreground" Value="#BABABA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>

        <Style x:Key="MainWindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Foreground" Value="#FFBABABA"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFBABABA" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF0086AF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>